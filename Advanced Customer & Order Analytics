--The following are querying the link below:
-- https://www.dropbox.com/s/cvsasmtr8syq2c2/BIT_DB?dl=0

-- Filtering data

WHERE length(order_id) = 6
AND order_id <> 'Order ID';

WHERE order_id IS NOT NULL
AND order_id <> ''

--filtering data by date

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

##2. 
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'

##3. 
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'

##2. 
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99'

SELECT *
FROM BIT_DB.JanSales

-- Queries

-- Query 1: How many orders were placed in January?
SELECT count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> '';

-- Query 2: How many of those orders were for an iPhone?
SELECT count(Product)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> ''
AND Product = "iPhone";

-- Query 3: Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers AS customers
INNER JOIN BIT_DB.FebSales AS febsales
ON customers.order_ID = febsales.orderID
WHERE length(orderID) = 6
AND orderID <> '';

-- Query 4: Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, min(price)
FROM BIT_DB.JanSales
GROUP BY Product;

-- Query 5: What is the total revenue for each product sold in January?
SELECT sum(Quantity) * price as revenue, Product
FROM BIT_DB.JanSales
GROUP BY product;

-- Query 6: Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT sum(Quantity), Product, sum(Quantity) * price as revenue
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"
GROUP BY Product;

-- Query 7: How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct customers.acctnum), avg(Quantity * price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers customers
ON feb.orderID = customers.order_ID
WHERE feb.Quantity > 2
AND length(orderID) = 6
AND orderid <> 'Order ID';

-- Query 8: List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, sum(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- Advanced Queries

-- Query 1: Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

-- Query 2: How many of each type of headphone were sold in February?
SELECT sum(Quantity) as quantity,
Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product

-- Query 3: What was the average amount spent per account in February? 
SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

--OR

SELECT OrderID, avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid = cust.order_id
WHERE length (orderid) = 6
AND orderid <> 'Order ID';


-- Query 4: What was the average quantity of products purchased per account in February?
SELECT sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid = cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Query 5: Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, sum(quantity*price) as revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY revenue desc
LIMIT 1;
